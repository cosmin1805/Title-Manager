name: Build and Deploy Release

on:
  push:
    tags:
      - 'v*'  # Runs for each version tag like v1.1.1, v2.0.0

  workflow_dispatch:  # Allows manual reruns from GitHub Actions UI

permissions:
  contents: write  # Required to create and modify releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all Git tags are available

      - name: Fetch All Tags
        run: git fetch --tags --force  # Ensures we can read all tags

      - name: Delete Existing GitHub Release (if exists)
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} | jq -r '.id')

          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
          fi
        continue-on-error: true  # Ignore errors if release doesnâ€™t exist

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build Release JAR
        run: ./gradlew buildRelease

      - name: Upload Release JAR
        uses: actions/upload-artifact@v4
        with:
          name: plugin-jar
          path: build/release/*.jar  # Upload only the JAR file

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use fine-grained token
          tag_name: ${{ github.ref_name }}
          files: build/release/*.jar  # Attach the correct JAR to the release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
